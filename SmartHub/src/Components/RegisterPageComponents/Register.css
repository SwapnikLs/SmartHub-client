/* Container layout */
.registration-container {
    display: flex;
    height: 100vh;
  }
  
  .registration-left {
    width: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: black;
  }
  
  .registration-form {
    width: 80%;
    max-width: 400px;
  }
  
  h2 {
    color: white;
  }
 
  .input-field1 {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #444;
    border-radius: 5px;
    background: #1a1a1a;
    color: white;
  }

.input-field1:focus {
  outline: none;
  box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);
}

.input-field1.error {
  border-color: red;
  box-shadow: 0 0 8px rgba(255, 0, 0, 0.5);
}

.input-field1.success {
  border-color: green;
}
.password-weak{
  border-color: red;
  
}
.password-medium{
  border-color: orange;

}
.password-strong{
  border-color:green;
}
.password-container {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}


/* Wrapper for message + strength bar */
.strength-wrapper {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  gap: 6px;
}

/* Weakness message styling */
.strength-message {
  font-size: 12px;
  font-weight: 500;
  width: 90px;
  text-align: right;
  transition: color 0.3s ease-in-out;
}

/* Color changes based on strength */
.weak-message {
  color: red;
}

.medium-message {
  color: orange;
}

.strong-message {
  color: green;
}

/* Strength bar */
.strength-bar {
  height: 6px;
  width: 40px;
  background: #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
}

/* Inner fill (animated growth) */
.strength-fill {
  height: 100%;
  width: 0%;
  transition: width 0.4s ease-in-out, background-color 0.4s ease-in-out;
}

/* Colors & Width based on strength */
.weak {
  width: 33%;
  background-color: red;
}

.medium {
  width: 66%;
  background-color: orange;
}

.strong {
  width: 100%;
  background-color: green;
}

.error-message,
.success-message {
  font-size: 14px;
  margin-top: -5px;
  animation: fadeInFromLeft 0.4s ease-in-out;
}
.fade-in1{
  font-size: 14px;
    opacity: 0; /* Initially hidden */
    transition: opacity 0.4s ease-in-out;
  
  }
  .fade-in1.show {
    opacity: 1;
    animation: fadeInFromLeft 0.4s ease-in-out;
  }
  .error-message {
  color: red;
}

.success-message {
  color: green;
}

/* Fade-in from left animation */
@keyframes fadeInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-15px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
.password{
  color:white;
}
.password-strength {
  font-size: 14px;
  font-weight: bold;
  margin-top: -5px;
  opacity: 0;
  transform: translateX(20px); /* Initially moved right */
  animation: fadeInFromLeft 0.4s ease-in-out;
}
.fade-in-from-left{
  
  animation: fadeInFromLeft 0.4s ease-in-out;
}
.password-strength.visible {
  opacity: 1;
  transform: translateX(0); /* Move to original position */
}
/* Color changes based on strength */
.weak {
  color: red;
}

.medium {
  color: orange;
}

.strong {
  color: green;
}

.password-requirements {
  list-style: none;
  padding: 0;
  font-size: 14px;
}

.password-requirements li {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 0;
  gap: 10px;
}

/* Toggle Switch */
.switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: red; /* Default Red */
  transition: 0.4s;
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 14px;
  width: 14px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}

/* Green Animation when checked */
input:checked + .slider {
  background-color: green;
}

input:checked + .slider:before {
  transform: translateX(20px);
}
.requirement-text{
  font-size: 14px;
  font-weight: 500;
  color: #777; /* Subtle gray */
  transition: color 0.3s ease-in-out, font-weight 0.3s ease-in-out;
}
/* âœ… Fixed: Change text color when switch is toggled */
li.valid .requirement-text {
  color: rgb(11, 183, 11);
  font-weight: 500;
}

  /* Button styling */
  .dark-button {
    background-color: #1a1a1a;
    color: #fff;
    border: 2px solid #444;
    border-radius: 8px;
    padding: 12px 24px;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-block;
    width: 100%;
  }
  
  .dark-button:hover {
    background-color: #444;
    border-color: #666;
    transform: translateY(-2px);
  }
  
  .dark-button:focus {
    outline: none;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.4);
  }
  
  .dark-button:active {
    background-color: #333;
    transform: translateY(0);
  }
  .register-right::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4); /* Opacity overlay */
    z-index: 1; /* Ensure overlay stays on top of the image */
  }
  .password-container {
    position: relative;
    display: flex;
    align-items: center;
  }
  .status-text {
    position: absolute;
    right: 15px;
    display: flex;
    align-items: center;
    gap: 5px;
    font-size: 14px;
    font-weight: 500;
    transition: color 0.3s ease-in-out;
  }
  
  /* Red when passwords don't match */
  .status-text.mismatch {
    color: red;
  }
  
  /* Green when passwords match */
  .status-text.match {
    color: green;
  }.loader {
    position: absolute;
    right: 12px; /* Adjusted to align inside input */
    top: 40%;
    transform: translateY(-50%);
    width: 16px; /* Reduced size */
    aspect-ratio: 1;
    border-radius: 50%;
    border: 4px solid white; /* Reduced border thickness */
    animation:
      l20-1 0.8s infinite linear alternate,
      l20-2 1.6s infinite linear;
  }
  
  @keyframes l20-1 {
    0%    {clip-path: polygon(50% 50%,0       0,  50%   0%,  50%    0%, 50%    0%, 50%    0%, 50%    0% )}
    12.5% {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100%   0%, 100%   0%, 100%   0% )}
    25%   {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100% 100%, 100% 100%, 100% 100% )}
    50%   {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100% 100%, 50%  100%, 0%   100% )}
    62.5% {clip-path: polygon(50% 50%,100%    0, 100%   0%,  100%   0%, 100% 100%, 50%  100%, 0%   100% )}
    75%   {clip-path: polygon(50% 50%,100% 100%, 100% 100%,  100% 100%, 100% 100%, 50%  100%, 0%   100% )}
    100%  {clip-path: polygon(50% 50%,50%  100%,  50% 100%,   50% 100%,  50% 100%, 50%  100%, 0%   100% )}
  }
  
  @keyframes l20-2 { 
    0%    {transform: scaleY(1)  rotate(0deg)}
    49.99%{transform: scaleY(1)  rotate(135deg)}
    50%   {transform: scaleY(-1) rotate(0deg)}
    100%  {transform: scaleY(-1) rotate(-135deg)}
  }
  @keyframes shakeText {
    0% { transform: translateX(0); }
    20% { transform: translateX(-3px); }
    40% { transform: translateX(3px); }
    60% { transform: translateX(-3px); }
    80% { transform: translateX(3px); }
    100% { transform: translateX(0); }
  }
  
  .shake{
    display: inline-block; /* Ensures animation applies properly */
    animation: shakeText 0.3s ease-in-out;
    color: red;
    font-weight: bold;
  }
  